<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ct-sim SYSTEM "config.dtd">

<ct-sim>
	<description>
		Dieses ist die zentrale Konfigurationsdatei für den c't-Sim
	</description>

	<!--
	Jeder Parameter kann bei Bedarf ein Attribut "os" haben. So kann man
	verschiedene Werte für verschiedene Betriebssysteme angeben. Hat ein
	Parameter (wie bisher ueblich) kein os-Attribut, gilt er für alle Systeme.

	Beispiele für systemabhängige Parameter sind der serielle Port und manche
	Pfadnamen.

	Sinn: Die bisherige Regelung, dass der Java-Code undurchsichtig in den
	Pfaden ruminterpretiert, kann entfallen. Auf jedem unterstützen System
	kann man nach dem Auschecken sofort starten (normalerweise).
	-->

	<!-- Initialer Wert für TickRate (1 / Simulationsgeschwindigkeit) -->
	<parameter name="ctSimTickRate" value="0"/>

	<!-- ctSimTimeout ist die Zeit in [ms], die der Controller maximal auf einen Bot wartet -->
	<parameter name="ctSimTimeout" value="500"/>

	<!-- Nur Simulierte Bots: Was passiert, wenn ein schwerer Fehler auftritt?
	(z.B. die TCP-Verbindung abbricht weil der Bot-Code abgestuerzt ist)
	"kill" = Bot aus Simulation entfernen (Standardverhalten)
	"halt" = Bot in Simulation lassen, auch wenn er sich nicht mehr bewegen kann
	Siehe auch http://www.heise.de/trac/ctbot/ticket/39 -->
	<parameter name="simBotErrorHandling" value="kill"/>

	<!-- parcours ist die Welt, die per default geladen wird. Angabe unabhängig von worlddir -->
	<parameter name="parcours" value="parcours/testparcours2.xml"/>
	<!-- worlddir ist das Verzeichnis, in dem alle Weltdateien liegen -->
	<parameter name="worlddir" value="./parcours"/>

	<!-- botport ist der TCP-Port, auf dem der sim auf Bots lauscht-->
	<parameter name="botport" value="10001"/>

	<!-- Aktiviert/deaktiviert den Autostart eines Bots, wie in botbinary (siehe unten) angegeben. Werte: true, false;
	Standardwert: false. -->
	<parameter name="BotAutoStart" value="false"/>


	<!-- botbinary ist die Bot-Datei, die beim Sim-Start gestartet wird.
	Hat nichts zu tun mit dem Parameter botdir -->
	<parameter name="botbinary" os="Windows" value="../ct-Bot/Debug-W32/ct-Bot.exe"/>
	<parameter name="botbinary" os="Linux" value="../ct-Bot/Debug-Linux_Mac/ct-Bot"/>
	<parameter name="botbinary" os="Mac OS X" value="../ct-Bot/Debug-Linux_Mac/ct-Bot"/>

	<!-- Verzeichnis, das der Dialog "Bot-Datei öffnen" anfangs anzeigt -->
	<parameter name="botdir" os="Windows" value="../ct-Bot/Debug-W32"/>
	<parameter name="botdir" os="Linux" value="../ct-Bot/Debug-Linux_Mac"/>
	<parameter name="botdir" os="Mac OS X" value="../ct-Bot/Debug-Linux_Mac"/>

	<!-- judge ist der Klassenname des Judges, den der Sim per default lädt-->
	<!-- <parameter name="judge" value="ctSim.model.rules.LabyrinthJudge"/> -->
	<parameter name="judge" value="ctSim.model.rules.DefaultJudge"/>

	<!-- Aktiviert/deaktiviert den TimeLogger, der während einer Simulation
	einige Performance-Daten auf die Konsole schreibt. Werte: true, false;
	Standardwert: false. -->
	<parameter name="TimeLogger" value="false"/>

	<!-- Stellt das Log-Level ein.
	Werte: SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST -->
	<parameter name="LogLevel" value="INFO"/>

	<!-- Fernbedienung, die verwendet werden soll.
	Namen wie in rc5-codes.h beim Bot-Code (Standard: RC_HAVE_HQ_RC_UNIVERS29_334) -->
	<parameter name="RC5-type" value="RC_HAVE_HQ_RC_UNIVERS29_334"/>

	<!-- Fernbedienungscode, der an simulierte Bots gesendet wird, wenn man
	"Play" drückt. "" = nichts senden, "5" = wie Knopf "5", weitere Codes
	in ctSim/model/bots/components/RemoteControlCodes.java.
	Wert: Beschreibung der Taste -->
	<parameter name="rcStartCode" value=""/>

	<!-- Schalter für Lichtsensoren -->
	<parameter name="LightSensors" value="true"/>

	<!-- Schalter für BPS-Sensor -->
	<parameter name="BPSSensor" value="true"/>
	
	<!-- Distanzsensortyp -->
	<parameter name="GP2Y0A60" value="false"/>
	<parameter name="VL53L0X" value="false"/>

	<!-- Schalter für Nachlauf der Räder -->
	<parameter name="WheelLag" value="false"/>

	<!-- Update-Intervall der Map-Anzeige [ms], default=500 -->
	<parameter name="MapUpdateIntervall" value="500"/>

	<!-- Serieller Anschluss. Der Sim verbindet sich mit ihm und erwartet
	dort einen USB-2-Bot-Adapter -->
	<parameter name="serialport" os="Windows" value="COM4"/>
	<parameter name="serialport" os="Linux" value="/dev/ttyUSB0"/>
	<parameter name="serialport" os="Mac OS X" value="/dev/cu.usbserial-ALSC2-1"/>
	<!-- Geschwindigkeit des 'serialport' in Baud, default 115200 -->
	<parameter name="serialportBaudrate" value="115200"/>

	<!-- IP, die standardmäßig im Textfeld steht, wenn man "Verbinden / Per
	TCP" wählt -->
	<parameter name="ipForConnectByTcp" value="192.168.1.30"/>
	<!-- Zugehöriger Port. Default: 10002 -->
	<parameter name="portForConnectByTcp" value="10002"/>

	<!-- Parameter der Map (für Export).
	müssen mit den Werten aus map.h (Bot-Projekt) übereinstimmen! -->
	<parameter name="mapSize" value="12.288f"/>
	<parameter name="mapResolution" value="125"/>
	<parameter name="mapSectionSize" value="16"/>
	<parameter name="mapMacroblockSize" value="512"/>

	<bots>
		<bot name="ctSim.model.bots.CtBotSimTest_0">
			<appearance type="normal">
				<description>Standard Aussehen des TestBots 1</description>
				<color>#FF0000</color>
			</appearance>
			<appearance type="collision">
				<description>Aussehen des TestBots 1 bei Kollision</description>
				<color>#800000</color>
			</appearance>
			<appearance type="falling">
				<description>Aussehen des TestBots 1 bei Absturz</description>
				<color>#5000FF</color>
			</appearance>
		</bot>
		<bot name="ctSim.model.bots.CtBotSimTest_1">
			<appearance type="normal">
				<description>Standard Aussehen des TestBots 2</description>
				<color>#00FF00</color>
			</appearance>
			<appearance type="collision">
				<description>Aussehen des TestBots 2 bei Kollision</description>
				<color>#008000</color>
			</appearance>
			<appearance type="falling">
				<description>Aussehen des TestBots 2 bei Absturz</description>
				<color>#0050FF</color>
			</appearance>
		</bot>

		<bot name="ctSim.model.bots.CtBotSimTcp_0">
			<appearance type="normal">
				<description>Standard Aussehen des simulierten Bots 1</description>
				<color>#800000</color>
			</appearance>
			<appearance type="door_open">
				<description>Standard Aussehen des simulierten Bots 1 mit offener Klappe</description>
				<color>#600000</color>
			</appearance>
			<appearance type="collision">
				<description>Aussehen des  simulierten Bots 1 bei Kollision</description>
				<color>#8000FF</color>
			</appearance>
			<appearance type="falling">
				<description>Aussehen des  simulierten Bots 1 bei Absturz</description>
				<color>#4000FF</color>
			</appearance>
			<appearance type="halted">
				<description>Aussehen des  simulierten Bots 1 wenn er angehalten ist</description>
				<color>#000000</color>
			</appearance>
		</bot>

		<bot name="ctSim.model.bots.CtBotSimTcp_1">
			<appearance type="normal">
				<description>Standard Aussehen des  simulierten Bots 2</description>
				<color>#0000A0</color>
			</appearance>
			<appearance type="door_open">
				<description>Standard Aussehen des simulierten Bots 2 mit offener Klappe</description>
				<color>#000080</color>
			</appearance>
			<appearance type="collision">
				<description>Aussehen des  simulierten Bots 2 bei Kollision</description>
				<color>#8000A0</color>
			</appearance>
			<appearance type="falling">
				<description>Aussehen des  simulierten Bots 2 bei Absturz</description>
				<color>#4000A0</color>
			</appearance>
			<appearance type="halted">
				<description>Aussehen des  simulierten Bots 2 wenn er angehalten ist</description>
				<color>#000040</color>
			</appearance>
		</bot>

		<bot name="default">
			<appearance type="normal">
				<description>Standard Aussehen des Standard-Bots</description>
				<color>#FF0000</color>
			</appearance>
			<appearance type="door_open">
				<description>Standard Aussehen des Standard-Bots mit offener Klappe</description>
				<color>#B00000</color>
			</appearance>
			<appearance type="collision">
				<description>Aussehen des Standard-Bots bei Kollision</description>
				<color>#FF00FF</color>
			</appearance>
			<appearance type="falling">
				<description>Aussehen des Standard-Bots bei Absturz</description>
				<color>#5000FF</color>
			</appearance>
		</bot>
	</bots>
</ct-sim>
